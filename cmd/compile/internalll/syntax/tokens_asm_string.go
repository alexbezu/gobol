// Code generated by "stringer -type tokens_asm tokens_asm.go"; DO NOT EDIT.

package syntax

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[_EOF_asm-1]
	_ = x[_Newline_asm-2]
	_ = x[_ID_asm-3]
	_ = x[_Literal_asm-4]
	_ = x[_Instruction-5]
	_ = x[_Label-6]
	_ = x[_Char_asm-7]
	_ = x[_Number_asm-8]
	_ = x[_Storage-9]
	_ = x[_Storage_len-10]
	_ = x[_Storage_rf-11]
	_ = x[_L_macro-12]
	_ = x[_Lparen_asm-13]
	_ = x[_Rparen_asm-14]
	_ = x[_Comma_asm-15]
	_ = x[_Semi_asm-16]
	_ = x[_Assign_asm-17]
	_ = x[_Star_asm-18]
	_ = x[_Plus_asm-19]
	_ = x[_Equ-20]
	_ = x[tokenCount_asm-21]
}

const _tokens_asm_name = "_EOF_asm_Newline_asm_ID_asm_Literal_asm_Instruction_Label_Char_asm_Number_asm_Storage_Storage_len_Storage_rf_L_macro_Lparen_asm_Rparen_asm_Comma_asm_Semi_asm_Assign_asm_Star_asm_Plus_asm_EqutokenCount_asm"

var _tokens_asm_index = [...]uint8{0, 8, 20, 27, 39, 51, 57, 66, 77, 85, 97, 108, 116, 127, 138, 148, 157, 168, 177, 186, 190, 204}

func (i tokens_asm) String() string {
	i -= 1
	if i >= tokens_asm(len(_tokens_asm_index)-1) {
		return "tokens_asm(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _tokens_asm_name[_tokens_asm_index[i]:_tokens_asm_index[i+1]]
}
